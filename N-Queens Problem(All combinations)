#include <bits/stdc++.h>
using namespace std;
bool b = false;
void print_pos(vector<int>&pos, int n)
{
    int i,j;
    b = true;
    char x[11][11];
    for(i=1;i<=n;i++)
    {
        for(j=1;j<=n;j++)
        {
            if(j==pos[i])
            {
                x[j][i] = 'Q';
            }
            else
            {
                x[j][i] = '0';
            }
        }
    }
    for(i=1;i<=n;i++)
    {
        for(j=1;j<=n;j++)
        {
            cout<<x[i][j]<<" ";
        }
        cout<<endl;
    }
    cout<<endl;
}
bool gen_queen(int col,int tot, int queen, vector<int> &pos)
{
    if(col == tot+1)
    {
        print_pos(pos,tot);
        return true;
    }
    //cout<<col<<endl;
    int t,i,j,row = tot;
    vector<int> safe;
    for(i=1;i<=row;i++)
    {
        bool found = true;
        for(j=1;j<=queen;j++)
        {
            //cout<<col<<" "<<j<<" "<<pos[j]<<endl;
            if(pos[j]==i || (j+pos[j])==i+col || (i-col)==(pos[j]-j))
            {
                found = false;
                break;
            }
            else
            {
                safe.push_back(i);
            }
        }
        if(found)
        {
            pos[queen] = i;
            gen_queen(col+1,tot,queen+1,pos);
            
            pos[queen] = -1;
                
    
        }
    }
                    
    return false;
}

int main() {
	//code
	int t,n;
	cin>>t;
	while(t--)
	{
	    cin>>n;
	    vector<int>pos(n+1,-1);
	    cout<<n<<": "<<endl;
	    gen_queen(1,n,1, pos);
	    if(b==false)
	    {
	        cout<<"-1";
	    }
	    b = false;
	    cout<<endl;
	    //print_pos(pos,n);
	}
	return 0;
}
